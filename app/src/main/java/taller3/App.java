/*
 * This source file was generated by the Gradle 'init' task
 */
package taller3;

public class App {

   public static void main(String[] args) {
   

   }

   /*
    * 1. Construya un algoritmo e implemente la función en Java Escribir_asc que
    * reciba tres números enteros diferentes
    * y devuelva en un String en orden ascendente con el siguiente formato:
    * "##### - ##### - #####", donde el primero es
    * el mayor de todos, el segundo el del medio, el tercero el menor de todos. Si
    * hay al menos dos números iguales,
    * devolverá el mensaje: "Error: La función no considera números iguales". Si
    * hay un error inesperado, deberá mostrar
    * el mensaje: "Ocurrió un error inesperado".
    */
   public static String Escribir_asc(int nro1, int nro2, int nro3){
      try {
         if(nro1 > nro2 && nro2 > nro3)
            return (nro1 + " - " + nro2 + " - " + nro3);
         else if (nro1 > nro3 && nro3 > nro2)
            return (nro1 + " - " + nro3 + " - " + nro2);
         else if (nro2 > nro3 && nro3 > nro1)
            return (nro2 + " - " + nro3 + " - " + nro1);
         else if (nro2 > nro1 && nro1 > nro3)
            return (nro2 + " - " + nro1 + " - " + nro3);
         else if (nro3 > nro2 && nro2 > nro1)
            return (nro3 + " - " + nro2 + " - " + nro1);
         else if (nro3 > nro1 && nro1 > nro2)
            return (nro3 + " - " + nro1 + " - " + nro2);
         else 
            return "Error: La función no considera números iguales";
         
          
      }
       catch (Exception e) {
         return "Ocurrió un error inesperado";
      }
    }



   /*
    * 2. Construya un algoritmo e implemente la función en Java Obtener_cifras que
    * recibe un número entre 0 y 50.000
    * y devuelve byte con las cifras que tiene. Por ejemplo 10 tiene dos cifras,
    * 9999 tiene 4 cifras. Si el número
    * no está en el rango devuelve 0. Y si hay un error inesperado, devuelve -1.
    * 
    */
   public static byte Obtener_cifras(int nro){
      try {
         final byte una_cifra_i = 0, una_cifra_lim = 9, dos_cifras_i = 10, dos_cifras_lim = 99;
         final short tres_cifras_i = (short)100, tres_cifras_lim = (short)999, cuatro_cifras_i = (short)1000, cuatro_cifras_lim = (short)9999, cinco_cifras_i = (short)10000, cinco_cifras_lim = (short)50000;
         final byte una_cifra = 1, dos_cifras = 2, tres_cifras = 3, cuatro_cifras = 4, cinco_cifras = 5;

         if(nro >= una_cifra_i && nro <= una_cifra_lim)
            return una_cifra;
         else if(nro >= dos_cifras_i && nro <= dos_cifras_lim)
            return dos_cifras;
         else if(nro >= tres_cifras_i && nro <= tres_cifras_lim)
            return tres_cifras;
         else if(nro >= cuatro_cifras_i && nro <= cuatro_cifras_lim)
            return cuatro_cifras;
         else if(nro >= cinco_cifras_i && nro <= cinco_cifras_lim)
            return cinco_cifras;
         else return 0;

          
      } catch (Exception e) {
         return -1;
      }
    }



   /*
    * 3. Construya un algoritmo e implemente la función en Java Clasificar_char que
    * recibe un caracter, y
    * devuelve un string de acuerdo con las siguientes condiciones: si es un
    * alfabético, deuvelve "ES LETRA";
    * si es numérico, devuelve "ES NUMERO" o si es un carácter especial, devuelve
    * "ESPECIAL".
    * Los caracteres se validan de acuerdo con la tabla ascii básica y lo explicado
    * en clase.
    * Si hay un error inesperado, deberá mostrar el mensaje:
    * "Ocurrió un error inesperado".
    * 
    */
   public static String Clasificar_char(char c) {
      try {
          if ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z')) 
            return "ES LETRA";
          else if (c >= '0' && c <= '9') 
            return "ES NUMERO";
         else return "ESPECIAL";
          
      } catch (Exception e) {
          return "Ocurrió un error inesperado";
      }
  }



   /*
    * 
    * 4. Construya un algoritmo e implemente la función en Java
    * Hallar_division_exacta que pida dos números enteros,
    * calcule la división del primero sobre el segundo, y al final si la división
    * es exacta, devuelva "DIVISION EXACTA"
    * y de lo contrario devuelva "DIVISION NO EXACTA". (Exacta significa que tiene
    * cociente, pero no residuo).
    * 
    * Si alguno de los dos números que recibe es cero o negativo, devuelva
    * "NO SE ADMITE CERO O NEGATIVOS".
    * Si hay un error inesperado, deberá mostrar el mensaje:
    * "Ocurrió un error inesperado".
    * Nota: Revise el funcionamiento del operador mod que le puede ayudar.
    * 
    * 
    * 
    */
   public static String Hallar_division_exacta(int n1, int n2){
      try {
         int resultado;

         if(n1 <= 0 || n2 <= 0){
            return "NO SE ADMITE CERO O NEGATIVOS";
         }

            resultado = n1 % n2;

         if(resultado == 0)
            return "DIVISION EXACTA";
         else return "DIVISION NO EXACTA";

      }
       catch (Exception e) {
         return "Ocurrió un error inesperado";
      }
    }

   

   /*
    * 5. En la siguiente tabla se encuentra la información de las habitaciones de
    * una finca hotel:
    * 
    * Habitación Camas Planta    AA/VENTILADOR
    *    101         2     Primera     AA
    *    102         1     Primera     VE
    *    201         3     Segunda     AA
    *    202         2     Segunda     VE
    *    301         2     Tercera     AA
    * 
    * 
    * Construya un algoritmo e implemente la función en Java Consultar_hab que
    * reciba en un byte el número de camas
    * y en un string si desea VE o AA, y deuvelva en un texto el o los números de
    * habitación que cumplen ese requisito.
    * Si son varias habitaciones, devuelvalas separadas por el caracter |
    * (normalmente, al lado izquierdo de la tecla del 1).
    * Ejemplo: "101|301"
    * Si el número de camas no está entre 1 y 3 o el string es diferente a AA o VE,
    * devuelva "DATOS NO VÁLIDOS".
    * Si hay un error inesperado, deberá mostrar el mensaje:
    * "Ocurrió un error inesperado".
    */
   public static String Consultar_hab(byte num_camas, String ve_aa){
      try {
         final byte una_cama = 1, dos_camas = 2, tres_camas = 3;

         if(num_camas == dos_camas && ve_aa.equals("AA"))
            return "101|301";
         else if (num_camas == una_cama && ve_aa.equals("VE"))
            return "102";
         else if (num_camas == dos_camas && ve_aa.equals("VE"))
            return "202";
         else if(num_camas == tres_camas && ve_aa.equals("AA"))
            return "201";
         else return "DATOS NO VÁLIDOS";

          
      }
       catch (Exception e) {
         return "Ocurrió un error inesperado";
      }
    }


   
   /*
    * 
    * 6. Un restaurante vende 3 platos. Si el cliente solicita el plato 1, le dan
    * el postre gratis; si selecciona los platos
    * 1 y 2, le dan la bebida gratis y si selecciona los platos 1,2 y 3, le dan
    * postre y bebida.
    * Construya un algoritmo e implemente la función Obtener_obs en Java que reciba
    * 3 booleanos, uno para cada plato y en
    * un String devuelva el obsequio ganado en mayúscula, así: "BEBIDA", "POSTRE",
    * "BEBIDA Y POSTRE".
    * Si los 3 platos vienen en false, , devuelva "PLATOS NO VÁLIDOS".
    * Si hay un error inesperado, deberá mostrar el mensaje:
    * "Ocurrió un error inesperado".
    */
   public static String Obtener_obs(boolean plato1, boolean plato2, boolean plato3){
      try {
         if(plato1 && !plato2 && !plato3)
            return "POSTRE";
         else if(plato1 && plato2 && !plato3)
            return "BEBIDA";
         else if(plato1 && plato2 && plato3)
            return "BEBIDA Y POSTRE";
         else return "PLATOS NO VÁLIDOS";
          
      }
       catch (Exception e) {
         return "Ocurrió un error inesperado";
      }
    }







   /*
    * 7. Un grupo de amigos hace un sorteo semanalmente con pelotas de ping pong,
    * para saber quién invita y a qué  la próxima salida.
    * Las opciones dependen del color que sacan en cada bola y son:
    * 
    * verde: Invita a las cervezas
    * azul: Invita a la pizza
    * rojo: Invita al postre
    * amarillo: Paga el parqueadero de todos
    * blanco o negro: Vaya y disfrute
    * Si la función recibe algo diferente a los colores dados, debe retornar
    * "Error en el color".
    * 
    * Se necesita una función en java Conocer_invitacion que reciba un string con
    * el color de la bola y retorna un
    * String con exactamente el texto de la invitación correspondiente.
    * 
    * Si hay un error inesperado, deberá mostrar el mensaje:
    * "Ocurrió un error inesperado".
    * 
    */
   public static String Conocer_invitacion(String color_bola){
     try {
   
      if(color_bola.equals("verde"))
         return "Invita a las cervezas";
      else if(color_bola.equals("azul"))
         return "Invita a la pizza";
      else if(color_bola.equals("rojo"))
         return "Invita al postre";
      else if(color_bola.equals("amarillo"))
         return "Paga el parqueadero de todos";
      else if(color_bola.equals("blanco") || color_bola.equals("negro"))
         return "Vaya y disfrute";
      else return "Error en el color";
    
     }
      catch (Exception e) {
         return "Ocurrió un error inesperado";
     }

   }
}
   

